1. 관리자 폼 커스터마이징

    Question 모델을 admin.site.register(Question) 에 등록함으로써,
    Django 는 디폴트 폼 표현을 구성할 수 있었다.
    관리 폼이 보이고 작동하는 방법을 커스터마이징 하려는 경우가 있다.
    객체를 등록할 때 Django 에 원하는 옵션을 알려주면 커스터마이징 할 수 있다.

    수정 폼의 필드를 재정렬하여 작동하는 법을 살펴보자.

    polls/admin.py 를 열고, 다음과 같이 수정해보자.

    from django.contrib import admin
    from .models import Question


    class QuestionAdmin(admin.ModelAdmin):
        fields = ['pub_date', 'question_text']


    admin.site.register(Question, QuestionAdmin)

    모델의 관리자 옵션을 변경해야 할 때마다,
    모델 어드민 클래스를 만든 다음, admin.site.register() 에 두 번째 인수로 전달하면 된다.

    변경된 사항은 pub_date 가 먼저 나오고, 그 다음 question_text 가 뒤따르게 됐다는 점이다.

    수십 개의 필드가 있는 관리 폼의 경우에는 직관적인 순서를 선택하는 것이 좋다.
    수십 개의 필드가 있는 폼에 관해서는 폼을 fieldset 으로 분할하는 것이 좋다.

    class QuestionAdmin(admin.ModelAdmin):
        fieldsets = [
            (None,               {'fields': ['question_text']}),
            ('Date information', {'fields': ['pub_date']}),
        ]

    fieldsets 의 각 튜플의 첫 번째 요소는 fieldset 의 제목이다.